{"ast":null,"code":"var _jsxFileName = \"/Users/keerthanaarcot/Personal/react-assessment/src/pages/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { makeStyles } from '@mui/styles';\nimport { useNavigate } from \"react-router-dom\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      width: \"100%\",\n      backgroundColor: 'grey'\n    },\n    grid: {\n      margin: 0,\n      width: \"100%\",\n      backgroundColor: 'grey'\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\" // 16:9\n\n    },\n    actions: {\n      display: \"flex\"\n    },\n    icon: {\n      margin: 0\n    },\n    card: {\n      width: \"100%\"\n    }\n  };\n});\nexport const Post = props => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const classes = useStyles({});\n  let navigate = useNavigate();\n\n  async function fetchPosts() {\n    let header = new Headers({\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'multipart/form-data'\n    });\n    let sendData = {\n      mode: 'cors',\n      header: header\n    };\n\n    try {\n      let res = await fetch(\"https://jsonplaceholder.typicode.com/posts/\", sendData);\n      res = await res.json();\n      setPosts(res);\n    } catch (e) {\n      handleErrors(e);\n    }\n  }\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  function handleErrors(response) {\n    if (!response.ok) {\n      console.error(response);\n      throw Error(response.statusText);\n    }\n\n    return response;\n  }\n\n  return (\n    /*#__PURE__*/\n    // <Grid\n    //     container\n    //     direction=\"row\"\n    //     justify=\"center\"\n    //     alignItems=\"baseline\"\n    //     spacing={24}\n    //     className={classes.grid}\n    // >\n    //     <Grid item xs={6}>\n    _jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        children: posts && Array.isArray(posts) && posts.length > 0 && posts.map((post, id) => /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 400,\n            marginTop: 5\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: 14\n              },\n              color: \"text.secondary\",\n              gutterBottom: true,\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              paragraph: true,\n              color: \"text.secondary\",\n              children: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 31\n        }, this) // <div key={id}>\n        //     <ListItem\n        //         button\n        //         divider\n        //         onClick={(e) => navigate(`/details/${post.id}`)}\n        //     >\n        //         <ListItemText\n        //             primary={post.title}\n        //             secondary={\"Id: \" + post.id}\n        //         />\n        //     </ListItem>\n        // </div>\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this) //     </Grid>\n    // </Grid>\n\n  );\n};\n\n_s(Post, \"ZcoRAG6hJespcBnU+PPif2UD/lE=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","Grid","List","ListItem","ListItemText","makeStyles","useNavigate","Card","CardActions","CardContent","Button","Typography","useStyles","theme","root","width","backgroundColor","grid","margin","media","height","paddingTop","actions","display","icon","card","Post","props","posts","setPosts","classes","navigate","fetchPosts","header","Headers","sendData","mode","res","fetch","json","e","handleErrors","response","ok","console","error","Error","statusText","Array","isArray","length","map","post","id","maxWidth","marginTop","fontSize","title","body"],"sources":["/Users/keerthanaarcot/Personal/react-assessment/src/pages/Post.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { makeStyles } from '@mui/styles';\nimport { useNavigate } from \"react-router-dom\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nconst useStyles = makeStyles((theme) => {\n    return {\n        root: {\n            width: \"100%\",\n            backgroundColor: 'grey'\n        },\n        grid: {\n            margin: 0,\n            width: \"100%\",\n            backgroundColor: 'grey'\n        },\n        media: {\n            height: 0,\n            paddingTop: \"56.25%\" // 16:9\n        },\n        actions: {\n            display: \"flex\"\n        },\n        icon: {\n            margin: 0\n        },\n        card: {\n            width: \"100%\"\n        }\n    }\n});\n\n\nexport const Post = (props) => {\n    const [posts, setPosts] = useState([])\n    const classes = useStyles({});\n    let navigate = useNavigate();\n\n\n    async function fetchPosts() {\n        let header = new Headers({\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'multipart/form-data'\n        });\n        let sendData = {\n            mode: 'cors',\n            header: header\n        };\n        try {\n            let res = await fetch(\"https://jsonplaceholder.typicode.com/posts/\", sendData)\n            res = await res.json()\n            setPosts(res)\n        } catch (e) {\n            handleErrors(e)\n        }\n    }\n\n    useEffect(() => {\n        fetchPosts()\n    }, [])\n\n\n\n    function handleErrors(response) {\n        if (!response.ok) {\n            console.error(response);\n            throw Error(response.statusText);\n        }\n        return response;\n    }\n    return (\n        // <Grid\n        //     container\n        //     direction=\"row\"\n        //     justify=\"center\"\n        //     alignItems=\"baseline\"\n        //     spacing={24}\n        //     className={classes.grid}\n        // >\n        //     <Grid item xs={6}>\n                <div\n                    className={classes.root}\n                >\n                    <List component=\"nav\">\n                        {posts && Array.isArray(posts) && posts.length > 0 && posts.map((post, id) => (\n                              <Card sx={{ maxWidth: 400, marginTop: 5 }}>\n                              <CardContent>\n                                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                  {post.title}\n                                </Typography>\n                                <Typography paragraph color=\"text.secondary\">\n                                  {post.body}\n                                </Typography>\n                              </CardContent>\n                              </Card>\n                            // <div key={id}>\n                            //     <ListItem\n                            //         button\n                            //         divider\n                            //         onClick={(e) => navigate(`/details/${post.id}`)}\n                            //     >\n                            //         <ListItemText\n                            //             primary={post.title}\n                            //             secondary={\"Id: \" + post.id}\n                            //         />\n                            //     </ListItem>\n                            // </div>\n                        ))}\n                    </List>\n                </div>\n        //     </Grid>\n        // </Grid>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}