{"ast":null,"code":"var _jsxFileName = \"/Users/keerthanaarcot/Personal/react-assessment/src/components/Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { makeStyles } from '@mui/styles';\nimport { useParams } from \"react-router-dom\";\nimport { CommentInput } from \"./CommentInput\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      width: \"100%\",\n      backgroundColor: 'grey'\n    },\n    grid: {\n      margin: 0,\n      width: \"100%\",\n      backgroundColor: 'grey'\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\" // 16:9\n\n    },\n    actions: {\n      display: \"flex\"\n    },\n    icon: {\n      margin: 0\n    },\n    card: {\n      width: \"100%\"\n    }\n  };\n});\nexport const Comments = props => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [isEdit, setIsEdit] = useState(false);\n  const {\n    id\n  } = props;\n  const classes = useStyles({});\n\n  async function fetchPosts() {\n    let header = new Headers({\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'multipart/form-data'\n    });\n    let sendData = {\n      mode: 'cors',\n      header: header\n    };\n\n    try {\n      let res = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}/comments`, sendData);\n      res = await res.json();\n      setComments(res.map(e => ({\n        editing: false,\n        ...e\n      })));\n    } catch (e) {\n      handleErrors(e);\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"inside\");\n    fetchPosts();\n  }, [id]);\n\n  function handleErrors(response) {\n    if (!response.ok) {\n      console.error(response);\n      throw Error(response.statusText);\n    }\n\n    return response;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      children: comments && Array.isArray(comments) && comments.length > 0 && comments.map((comment, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          divider: true,\n          onClick: e => console.log(e),\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: comment.name,\n            secondary: \"email: \" + comment.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), !comment.editing && /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: comment.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(EditIcon, {\n            onClick: e => {\n              const mod = [...comments].map(e => {\n                if (e.id === comment.id) {\n                  return { ...e,\n                    editing: true\n                  };\n                } else {\n                  return e;\n                }\n              });\n              setComments(mod);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), comment.editing && /*#__PURE__*/_jsxDEV(CommentInput, {\n            mycomment: comment.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 49\n          }, this), comment.editing && /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Save\",\n            onClick: e => {\n              const mod = [...comments].map(e => {\n                if (e.id === comment.id) {\n                  return { ...e,\n                    body: comment.body\n                  };\n                } else {\n                  return e;\n                }\n              });\n              setComments(mod);\n            },\n            children: \" Save \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comments, \"YUEwB1pz2bmrwRrMM+/mlT99XdM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","useState","Grid","List","ListItem","ListItemText","makeStyles","useParams","CommentInput","EditIcon","Button","useStyles","theme","root","width","backgroundColor","grid","margin","media","height","paddingTop","actions","display","icon","card","Comments","props","comments","setComments","isEdit","setIsEdit","id","classes","fetchPosts","header","Headers","sendData","mode","res","fetch","json","map","e","editing","handleErrors","console","log","response","ok","error","Error","statusText","Array","isArray","length","comment","name","email","body","mod"],"sources":["/Users/keerthanaarcot/Personal/react-assessment/src/components/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { makeStyles } from '@mui/styles';\nimport { useParams } from \"react-router-dom\";\nimport { CommentInput } from \"./CommentInput\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport { Button } from \"@mui/material\";\n\n\nconst useStyles = makeStyles((theme) => {\n    return {\n        root: {\n            width: \"100%\",\n            backgroundColor: 'grey'\n        },\n        grid: {\n            margin: 0,\n            width: \"100%\",\n            backgroundColor: 'grey'\n        },\n        media: {\n            height: 0,\n            paddingTop: \"56.25%\" // 16:9\n        },\n        actions: {\n            display: \"flex\"\n        },\n        icon: {\n            margin: 0\n        },\n        card: {\n            width: \"100%\"\n        }\n    }\n});\n\n\nexport const Comments = (props) => {\n    const [comments, setComments] = useState([])\n    const [isEdit, setIsEdit] = useState(false)\n    const { id } = props\n    const classes = useStyles({});\n\n    async function fetchPosts() {\n        let header = new Headers({\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'multipart/form-data'\n        });\n        let sendData = {\n            mode: 'cors',\n            header: header\n        };\n        try {\n            let res = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}/comments`, sendData)\n            res = await res.json()\n            setComments(res.map((e)=> ({editing: false, ...e})))\n        } catch (e) {\n            handleErrors(e)\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"inside\")\n        fetchPosts()\n    }, [id])\n\n\n\n    function handleErrors(response) {\n        if (!response.ok) {\n            console.error(response);\n            throw Error(response.statusText);\n        }\n        return response;\n    }\n    return (\n        <div\n            className={classes.root}\n        >\n            {/* {JSON.stringify(comments)} */}\n            <List component=\"nav\">\n                {comments && Array.isArray(comments) && comments.length > 0 && comments.map((comment, id) => (\n                    <div key={id}>\n                        <ListItem\n                            button\n                            divider\n                            onClick={(e) => console.log(e)}\n                        >\n                            <ListItemText\n                                primary={comment.name}\n                                secondary={\"email: \" + comment.email}\n                            />\n                            {!comment.editing && <ListItemText\n                                primary={comment.body}\n                            />}\n                            <EditIcon onClick={(e)=> {\n                                const mod = [...comments].map((e)=> {\n                                    if (e.id === comment.id) {\n                                        return {...e, editing: true}\n                                    } else {\n                                        return e\n                                    }\n                                })\n                               setComments(mod)\n                            }}/>\n                            {comment.editing && <CommentInput mycomment={comment.body}/>}\n                            {comment.editing && <Button title=\"Save\" onClick={(e)=> {\n                                                                const mod = [...comments].map((e)=> {\n                                                                    if (e.id === comment.id) {\n                                                                        return {...e, body: comment.body}\n                                                                    } else {\n                                                                        return e\n                                                                    }\n                                                                })\n                                                               setComments(mod)\n                            }}> Save </Button>}\n                        </ListItem>\n                    </div>\n                ))}\n            </List>\n            <CommentInput />\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}